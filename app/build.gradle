plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
//    id 'androidx.navigation.safeargs.kotlin'
}
ext {
    // Version
    versionMajor = 0
    versionMinor = 1
    versionPatch = 0
    versionBuild = 0
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.golnaz.countries"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode computeVersionCode()
        versionName computeVersionName()

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
        dataBinding {
            enabled = true
        }
        viewBinding {
            enabled = true
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        //noinspection DataBindingWithoutKapt
        dataBinding true
        viewBinding true
    }
    configurations.all {
        resolutionStrategy.force "org.antlr:antlr4-runtime:4.7.1"
        resolutionStrategy.force "org.antlr:antlr4-tool:4.7.1"
    }

//kotlin DSL
    configurations.all {
        resolutionStrategy {
            force("org.antlr:antlr4-runtime:4.7.1")
            force("org.antlr:antlr4-tool:4.7.1")
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.0'

    //ViewModel
    implementation(ViewModel.lifeCycleExt)
    implementation(ViewModel.lifeCycleLiveData)
    implementation(ViewModel.lifeCycleViewModel)
    implementation(ViewModel.arch)

    //Hilt
    implementation(Hilt.hilt)
    kapt(Hilt.hiltKapt)

    //Retrofit
    implementation(Retrofit.retrofit)
    implementation(Retrofit.moshi)
    implementation(Retrofit.moshiConverter)
    implementation(Retrofit.coroutinesNetwork)
    kapt(Retrofit.moshiKapt)
    implementation(Retrofit.interceptor)

    //Picasso
    implementation(Picasso.picasso)

    //Coroutines
    implementation(Coroutines.coroutines)

    //Room
    implementation(Room.room)
    implementation(Room.roomKTX)
    //implementation(Room.roomCoroutines)
    kapt(Room.roomKept)

    //Spanned
    implementation(Spanned.spanned)



}
def computeVersionName() {
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}

def computeVersionCode() {
    return new Date().format("yyyyMMdd").toInteger()
}

